#!/usr/bin/env python3
"""
Script para verificar la conectividad con la API remota
Ejecutar antes de usar la aplicaci√≥n para asegurarse que el t√∫nel SSH est√° activo
"""

import requests
import urllib3
import sys

# Deshabilitar warnings de SSL
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def test_connection():
    """Probar la conexi√≥n con la API"""
    api_url = "https://localhost:8443"
    
    print("="*70)
    print("üîç VERIFICADOR DE CONECTIVIDAD API")
    print("="*70)
    print(f"\nüìç URL de la API: {api_url}")
    print(f"‚è±Ô∏è  Timeout configurado: 10 segundos")
    print("\n" + "-"*70)
    
    # Test 1: Conexi√≥n b√°sica al servidor
    print("\n1Ô∏è‚É£  Probando conexi√≥n b√°sica al servidor...")
    try:
        response = requests.get(
            f"{api_url}/",
            verify=False,
            timeout=10
        )
        print(f"   ‚úÖ Conexi√≥n exitosa (Status: {response.status_code})")
    except requests.exceptions.Timeout:
        print("   ‚ùå ERROR: Timeout - El servidor no responde en 10 segundos")
        print("   üí° Soluci√≥n: Verifique que el t√∫nel SSH est√° activo:")
        print("      ssh -NL 8443:localhost:443 ubuntu@10.20.12.97 -p 5801")
        return False
    except requests.exceptions.ConnectionError as e:
        print(f"   ‚ùå ERROR: No se pudo conectar al servidor")
        print(f"   üí° Detalles: {str(e)}")
        print("   üí° Soluci√≥n: Verifique que el t√∫nel SSH est√° activo:")
        print("      ssh -NL 8443:localhost:443 ubuntu@10.20.12.97 -p 5801")
        return False
    except Exception as e:
        print(f"   ‚ùå ERROR: {type(e).__name__}: {str(e)}")
        return False
    
    # Test 2: Endpoint de health check (si existe)
    print("\n2Ô∏è‚É£  Probando endpoints de la API...")
    endpoints_to_test = [
        "/auth/login",
        "/slices/listar_slices",
    ]
    
    for endpoint in endpoints_to_test:
        try:
            response = requests.get(
                f"{api_url}{endpoint}",
                verify=False,
                timeout=10
            )
            print(f"   ‚úÖ {endpoint} - Status: {response.status_code}")
        except requests.exceptions.Timeout:
            print(f"   ‚ö†Ô∏è  {endpoint} - Timeout (puede requerir autenticaci√≥n)")
        except Exception as e:
            print(f"   ‚ö†Ô∏è  {endpoint} - {type(e).__name__}")
    
    print("\n" + "="*70)
    print("‚úÖ VERIFICACI√ìN COMPLETADA")
    print("="*70)
    print("\nüí° Recordatorios:")
    print("   ‚Ä¢ El t√∫nel SSH debe estar activo ANTES de usar la aplicaci√≥n")
    print("   ‚Ä¢ Comando SSH: ssh -NL 8443:localhost:443 ubuntu@10.20.12.97 -p 5801")
    print("   ‚Ä¢ Los timeouts ahora son m√°s largos:")
    print("     - Creaci√≥n de slices: 60 segundos")
    print("     - Otras operaciones: 30 segundos")
    print("     - Listado: 20 segundos")
    print("\n")
    return True

if __name__ == "__main__":
    success = test_connection()
    sys.exit(0 if success else 1)
